/**
 * Created by Michael on 11/02/16.
 */

var FF = FF || {};

/**
 * FF - curriculum.js
 */
FF.curriculum = (function ($) {

    var els = {};

    var pub = {};

    /**
     *  Variable: buttonDisplayThreshold
     *    The minimum number of rows a table should have before we use the "Show More" button
     */
    var buttonDisplayThreshold = 15;

    /**
     *  Variable: alwaysDisplayedCount
     *    The number of rows that will always be displayed. Should be less than the buttonDisplayThreshold.
     */
    var alwaysDisplayedCount = 10;

    /**
     *  Function: initGroupSelector
     *    Sets up the course group selector for each top level group. Bound to .level-one-group element
     *
     *  Returns:
     *    nothing
     */
    function initGroupSelector() {
        var $this, $groups, $selector, options;

        $this = $(this);
        $groups = $this.find('.level-two-group');

        // No need to build a selector with only one course group
        if ( $groups.length <= 1 )  {
            return;
        }

        $selector = $this.find('.level-two-select select');
        options = '';

        $groups.each(function(){
            var $group, $title;
            $group = $(this);
            $title = $group.find('.level-two-title');
            if ( ! $title.length ) {
                return;
            }
            options += '<option value="#' + $group.attr('id') + '">' + $title.text() + '</option>';

            // Get rid of the title.
            $title.remove();
        });
        $selector
            .html(options)
            .data('$groups', $groups)
            .on('change', changeVisibleGroup)
            .trigger('change');
    }

    /**
     *  Function: changeVisibleGroup
     *    Changes the visible level two group. Bound to a group selector.
     *
     *  Arguments:
     *    e - *(Object)* The event object
     *
     *  Returns:
     *    nothing
     */
    function changeVisibleGroup(e) {
        var $selector, $groups;

        if ( e ) {
            e.preventDefault();
        }

        $selector = $(this);
        $groups = $selector.data('$groups');

        $groups.addClass('hidden');
        $groups.filter($selector.val()).removeClass('hidden');
    }

    /**
     *  Function: initTable
     *    Sets up a table for show/hide functionality. Bound to a .course-listing element
     *
     *  Returns:
     *    nothing
     */
    function initTable() {
        var $listing, $table, $rows, $button, $buttonWrapper, $header, $subheader, headerText;
        $listing = $(this);
        $table = $listing.find('.course-table');
        if ( ! $table.length ) {
            return;
        }

        $rows = $table.find('.row');
        if ( $rows.length <= buttonDisplayThreshold ) {
            return;
        }

        headerText = '';
        $header = $listing.prevAll('h3:first');
        $subheader = $listing.prevAll('h4:first');
        if ( $header.length ) {
            headerText = prepHeaderText($header.text());
        }
        if ( $subheader.length ) {
            headerText += (headerText === '' ? '' : ': ') + prepHeaderText($subheader.text());
        }

        // Set up the button
        $button = $('<button type="button"></button');
        $button.data({
            showMoreLabel: ('Show More {NAME} Courses (' + $rows.length + ')').replace('{NAME}', headerText || ''),
            showLessLabel: ('Show Fewer {NAME} Courses').replace('{NAME}', headerText || ''),
            $table : $table
        }).on('click', toggleShowAllRows);

        $buttonWrapper = $('<div class="view-more"></div>');
        $buttonWrapper.append($button).insertAfter($table);

        $button.trigger('click');
    }

    /**
     *  Function: prepHeaderText
     *    Prepares text for button display. Strips the word "Course(s)" and singularizes "Electives"
     *
     *  Arguments:
     *    text - *(String)* The original header text
     *
     *  Returns:
     *    *(String)* The prepped version of the text.
     */
    function prepHeaderText(text) {
        if (typeof text !== 'string') {
            return '';
        }
        return $.trim(text).replace(/courses?$/i, '').replace(/(elective)s$/i, '$1');
    }

    /**
     *  Function: toggleShowAllRows
     *    Shows/Hides extra rows in long tables. Bound to the click event on a group's show more/less button
     *
     *  Arguments:
     *    e - *(Object)* Event object
     *
     *  Returns:
     *    nothing
     */
    function toggleShowAllRows(e) {
        var $button, $table;

        if ( e ) {
            e.preventDefault();
        }

        $button = $(this);
        $table = $button.data('$table');

        if ( $table.data('rowsHidden') ) {
            // Show all rows
            $table.find('.row.hidden').removeClass('hidden');
            $button.text($button.data('showLessLabel'));
            $table.data('rowsHidden', false);
        } else {
            // Show fewer rows
            $table.find('.row:nth-of-type(1n+' + alwaysDisplayedCount + ')').addClass('hidden');
            $button.text($button.data('showMoreLabel'));
            $table.data('rowsHidden', true);
        }
    }

    /**
     *  Function: FF.curriculum.init
     *    Sets up the curriculum list functionality
     *
     *  Returns:
     *    nothing
     */
    pub.init = function() {
        els.container = $('.curriculum-content');
        if ( ! els.container.length ) {
            return;
        }
        els.course_groups = els.container.find('.level-one-group');
        els.course_listings = els.container.find('.course-listings');
        els.course_listings.each(initTable);

        els.course_groups.each(initGroupSelector);
    };

    return pub;

})(jQuery);

jQuery(document).ready(FF.curriculum.init);