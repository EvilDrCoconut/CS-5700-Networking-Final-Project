/**
 * Created by Rob on 6/24/2016.
 */

var FF = FF || {};

/**
 * FF - smoothScroll.js
 *
 * Creates smooth scrolling on anchor links
 *
 */
FF.smoothScroll = (function ($) {

    var els = {};

    var pub = {};

    pub.init = init;

    function init() {

        els.parents = $('.anchor-link-parent');
        els.links = $('a.anchor-link');
        els.anchors = $('section.anchor-section');
        els.window = $(window);


        els.links.click(function(e) {
            if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
                var target = $(this.hash);
                target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
                if (target.length) {
                    $('html, body').animate({
                        scrollTop: target.offset().top - 18 // -18 provides some padding top
                    }, 1000);
                    return false;
                }
            }
        });

        // Add the listeners to manage highlighting of navigation menu
        els.window.scroll(update);
        els.window.resize(update);
        update();
    }

    var update = debounce(function() {

        var scrollPosition = $(window).scrollTop() + 100;
        var activated = false;
        $.each(els.anchors, function(index, item) {
            var itemPosition = $(item).offset().top;
            var itemHeight = $(item).height();
            if(scrollPosition > itemPosition && scrollPosition < itemPosition + itemHeight) {
                els.parents.removeClass('active');
                els.parents.eq(index).addClass('active');
                activated = true;
            }
        });

        // If nothing is active remove the active state from all navigation elements
        if(!activated) {
            els.parents.removeClass('active');
        }
    }, 100);

    function debounce(func, wait, immediate) {
        var timeout;
        return function() {
            var context = this, args = arguments;
            var later = function() {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    }

    return pub;

})(jQuery);

jQuery(document).ready(FF.smoothScroll.init);
