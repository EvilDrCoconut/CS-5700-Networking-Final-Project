/**
 * Created by Jason on 4/12/16.
 */


/**
 * @section components
 * @subsection accordion
 * @description - The accordion should be used when there is concern over the length of content. By collapsing the content, users can choose what they want to read and expand relevant sections without dealing with an exceptionally long page. Accordions can be found on program pages and in the main site menu on mobile. To create an accordion, the list label needs class="collapsible-label" and data-accordion="any value". The list items must have class="collapsible-item" and the same value for data-accordion as their parent.
 * @file {psd} 01_Accordion.psd https://www.dropbox.com/sh/x62wdr78yk5how0/AACwTi7geh-kFjvPlYykM892a?dl=0&preview=01_Accordion.psd
 * @rendered {tabbed} - <h4 class="collapsible-label" data-accordion="1">Business <span class="extra-small">(21)</span></h4>
 *      <div class="collapsible-item" data-accordion="1">
 *          <p>Lorem Ipsum</p>
 *          <p>Lorem Ipsum</p>
 *      </div>
 *      <hr />
 *
 *      <h4 class="collapsible-label" data-accordion="2">Communication &amp; Digital Media <spanclass="extra-small">(8)</span></h4>
 *      <div class="collapsible-item" data-accordion="2">Lorem Ipsum</div>
 *      <hr />
 *
 *      <h4 class="collapsible-label" data-accordion="3">Education &amp; Learning <span class="extra-small">(8)</span></h4>
 *      <div class="collapsible-item" data-accordion="3">Lorem Ipsum</div>
 */

var FF = FF || {};

/**
 * FF - accordion.js
 *
 *
 * accordion-label and accordion-item are used for collapsible menus and navigation.
 *
 * collapsible-label and collapsible-item are used for sections of content that open and close.
 *
 * if a class of 'accordion-wide' is added to all labels and items the accordion will work up to a higher breakpoint
 */

FF.accordion = (function ($) {

    var els = {};

    var pub = {};

    pub.init = init;
    pub.closeAll = closeAll;

    // BUG: This is bound to the menu open/close when in desktop and prevents label click on the menu in IE9
    function toggle() {

        var label = $(this);
        var accordion = label.attr('data-accordion');
        var items = $('.accordion-item[data-accordion="' + accordion + '"], .collapsible-item[data-accordion="' + accordion + '"]');

        label.toggleClass('open');
        items.toggleClass('open');

        //console.log('Toggle open');

    }

    // Public close all method.
    function closeAll(selector) {
        if (typeof selector !== 'string') return;
        $(selector + ' .accordion-label').removeClass('open');
        $(selector + ' .accordion-item').removeClass('open');
        $(selector + ' .collapsible-label').removeClass('open');
        $(selector + ' .collapsible-item').removeClass('open');
    }
    
    function init() {
        // Note: must use a container and not body to listen otherwise this wont work on iOS
        $('header, footer, #content').on('click', '.accordion-label, .collapsible-label', toggle);

		// Open Request Info accordion on small screens
		if($(window).width() < 768){
			$("#find-out-more .section-tab").click();
		}
    }

    return pub;

})(jQuery);

jQuery(document).ready(FF.accordion.init);