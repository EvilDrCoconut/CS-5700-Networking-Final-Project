/**
 * Created by Rob 5/10/16
 */
/**
 * @section styles
 * @subsection tooltips
 * @description - Tooltips should be used when information may need a short explanation to help guide the user. In the graduate site they are used with info icons displaying degree types that have branded terms which may confuse the user (example: Stackable Certificate). Tooltips can be added to any element. Just add three attributes to the element. Title - the title of the modal, data-toggle - this makes it a tooltip, and data-content - the content to put in the modal.
 * @rendered {tabbed} -
 *          <div class="tooltip-style-guide">Tooltip – With a Title
 *              <span class="icon icon-nav-info" data-title="This is a title" data-toggle="tooltip" data-content="Here is some content with a title.">
 *                  <span class="path1"></span><span class="path2"></span></span>
 *              </span>
 *          </div>
 *          <div class="tooltip-style-guide">Tooltip – No Title
 *              <span class="icon icon-nav-info" data-title="" data-toggle="tooltip" data-content="Here is some content without a title.">
 *                  <span class="path1"></span><span class="path2"></span></span>
 *              </span>
 *          </div>
 *
 */

var FF = FF || {};

/**
 * FF - tooltip.js
 *
 *
 */
FF.tooltip = (function ($) {

    var els = {};

    var pub = {};

    pub.init = init;
    pub.bindEvents = bindEvents;

    var initialized = false;

    function init() {

        // console.log('init tooltip');

        // add an element to the page to hold the tooltip and cache
        $('body').append('<div class="tooltip element-container"><div class="tooltip-wrapper"><div class="tooltip-close icon icon-nav-cross-thin"></div><div class="tooltip-scroll-container"><div class="tooltip-content-container"></div></div></div></div>');
        els.tooltip = $('.tooltip');

        // Cache a selector for the tooltip content div
        els.content = $('.tooltip-content-container');



        setTimeout(bindEvents, 10);
    }

    function bindEvents() {


        // console.log('tt bind events');

        // find elements that have the tooltip data attribute
        // add a click event on the whole thing to close
        $('.tooltip, .tooltip-close').click(tooltipCloseClicked);
        $('.tooltip, .tooltip-close').bind("touchstart",tooltipCloseClicked);

        // Add an event on the content wrapper to stop bubbling up and allow clicks inside
        $('.tooltip-wrapper').click(function(e) {
            e.stopPropagation();
        });

        $('[data-toggle=tooltip]').off().on('click', tooltipClicked);

    }

    function tooltipClicked(e) {

        e.stopPropagation();

        // console.log('tt clicked');
        // empty the tooltip
        els.content.empty();

        // add a title div if applicable
        var title = $(e.currentTarget).data('title');
        if(title) {
            els.content.append(titleHtmlString(title))
        }

        // add a content block if applicable
        var content = $(e.currentTarget).data('content');
        var isIFrame = $(e.currentTarget).data('type') == 'iframe';
        if(content) {

            // Check to see if a type of iframe was specified
            if(isIFrame) {
                $('.tooltip-wrapper').addClass('iframe');
                els.content.append(iFrameHtmlString());
                els.iFrame = new pym.Parent('toolip-iframe', content, {});
            }
            // no type specified - normal behavior
            else {
                els.content.append(contentHtmlString(content));
            }
        }

        // update the element queries
        FF.responsive.update();

        // Make the tooltip visible and freeze the body
        if(isIFrame) {
            // add a short delay to let iFrame load before entering
            setTimeout(function() {
                els.tooltip.addClass('show');
                $('body').addClass('tooltip-open');
            }, 100);
        }
        else {
            els.tooltip.addClass('show');
            $('body').addClass('tooltip-open');
        }
    }

    function tooltipCloseClicked(e) {

        // Hide the tooltip and return body to normal
        els.tooltip.removeClass('show');
        $('body').removeClass('tooltip-open');

        var isIFrame = $(e.currentTarget).data('type') == 'iframe';
        if(isIFrame && els.iFrame) {
            els.iFrame.remove();
            els.iFrame = {};
            $('.tooltip-wrapper').removeClass('iframe');
        }
    }

    // returns a title block html string
    function titleHtmlString(title) {
        var string = '';
        string += '<h3 class="tooltip-title">';
        string +=  title;
        string += '</h3>';

        return string;
    }

    // returns a content block html string
    function contentHtmlString(content) {
        var string = '';
        string += '<p class="tooltip-content">';
        string +=  content;
        string += '</p>';

        return string;
    }

    // returns an iframe block html with an address
    function iFrameHtmlString() {
        var string = '';
        string += '<div id="toolip-iframe"><div>';
        return string;
    }

    return pub;

})(jQuery);

// Send it!
jQuery(document).ready(FF.tooltip.init);